'''
Подвиг 4. Повторите задачу с транспонированием прямоугольной матрицы с помощью list comprehension, изложенной в видео-уроке к этой практике. На вход поступает таблица целых чисел, на выходе нужно отобразить эту же таблицу в транспонированном виде (строки заменяются на столбцы), используя команду:

for row in A:
    print(*row)
где A - транспонированный двумерный список. Желательно сделать эту задачу не пересматривая видео.

P. S. Для считывания списка целиком в программе уже записаны начальные строчки. 

Sample Input:

1 2 3
4 5 6
7 8 9
5 4 3

Sample Output:

1 4 7 5
2 5 8 4
3 6 9 3
'''

import sys

# считывание списка из входного потока
s = sys.stdin.readlines()
A = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)
#A = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]

A = [[row[i] for row in A] for i in range(len(A[0]))]

#print(A)

for i in range(len(A)):
    for j in range(len(A[0])):
        if j != len(A[0]) - 1:
            print(A[i][j], end = " ")
        else:
            print(A[i][j], end = '')
    print()
